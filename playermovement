using UnityEngine;
using static UnityEngine.RuleTile.TilingRuleOutput;
using UnityEngine.UIElements;

public class player : MonoBehaviour  // MonoBehaviour is the base class for all Unity scripts that enable interaction with GameObjects        
{
    private SpriteRenderer spriteRenderer;  // reference to the SpriteRenderer component,used to render sprites

    public Sprite[] sprites;               // An array of sprites used for animation.

    private int si;                         //sprite index value to track the iterations

    private Vector3 direction;              //used for sprite's movements

    public float gravity = -9.8f;           
    
    public float strength = 5f;             // strength for the player's jump

    public void Awake()
    {
        spriteRenderer = GetComponent<SpriteRenderer>();  //assinging the spriteRenderer component to the ref var
    }

    public void Start()
    {
        InvokeRepeating(nameof(Animatesprite), 0.15f, 0.15f);   //this method is used to animate the sprite with delay of .15 sec and start after 0.15 sec
    }
    private void OnEnable() 
    {
        Vector3 position = transform.position;
        position.y = 0f;
        transform.position = position;
        direction = Vector3.zero; 
    }

    public void Update()
    {
        if (Input.GetKeyDown(KeyCode.Space)|| Input.GetKeyDown(KeyCode.W))
        {
            direction = Vector3.up * strength;      //Sets the player's up movement dir when the space key or a touch is detected.
        }
        if (Input.touchCount > 0)                   //Checks if there is at least one touch input detected
        {
            Touch touch= Input.GetTouch(0);         //Retrieves the first touch input
            if (touch.phase == TouchPhase.Began)
            {
                direction = Vector3.up * strength;
            }
        }
        direction.y += gravity * Time.deltaTime;    //sets gravity for the player movement
        transform.position += direction * Time.deltaTime;   // Updates the player's position based on the movement direction.
    }
    private void Animatesprite()
    {
        si++;
        if(si >= sprites.Length)
        {
            si = 0;
        }
        spriteRenderer.sprite = sprites[si];
    }

    public void OnTriggerEnter2D(Collider2D other)
    {
        if(other.gameObject.tag == "Obstacle")
        {
            FindAnyObjectByType<GameManager>().Gameover();
        }
        else if(other.gameObject.tag == "Score")
        {
            FindAnyObjectByType<GameManager>().Increasescore();
        }
    }
}
